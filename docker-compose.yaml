---
# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.
# Modified by Brian Aydemir <baydemir@morgridge.org>.

version: "3.0"

#---------------------------------------------------------------------------

services:

  # Configuration specified in the `.env` file and `secrets` directory is
  # passed into the services via the `env_file` and `environment` sections.

  hub-db:
    image: postgres:9.5
    container_name: jupyterhub-db
    restart: always

    env_file:
    - secrets/postgres.env

    environment:
      PGDATA: ${DB_VOLUME_PATH}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
    - db:${DB_VOLUME_PATH}

  hub:
    depends_on:
    - htcondor
    - hub-db
    - token-issuer

    build:
      context: .
      dockerfile: Dockerfile.jupyterhub
      args:
        JUPYTERHUB_VERSION: ${JUPYTERHUB_VERSION}

    image: ${JUPYTERHUB_IMAGE}
    container_name: jupyterhub
    restart: always

    command: >
      jupyterhub -f /srv/jupyterhub/jupyterhub_config.py

    env_file:
    - secrets/oauth.env
    - secrets/postgres.env

    environment:
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}

      HUB_VOLUME_PATH: ${HUB_VOLUME_PATH}

      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: hub-db

      SINGLEUSER_IMAGE: ${SINGLEUSER_IMAGE}
      SINGLEUSER_CMD: ${SINGLEUSER_CMD}
      SINGLEUSER_VOLUME_PATH: ${SINGLEUSER_VOLUME_PATH}

      TOKEN_SERVICE_PORT: ${TOKEN_SERVICE_PORT}

    links:
    - hub-db

    ports:
    - 443:443

    secrets:
    - source: sciauth-service-config
      target: /etc/sciauth/jupyterhub_svc_config.yaml

    volumes:
    - hub:${HUB_VOLUME_PATH}
    - /var/run/docker.sock:/var/run/docker.sock:rw

  token-issuer:
    image: hub.opensciencegrid.org/sciauth/lightweight-issuer:latest
    container_name: token-issuer.localdomain
    restart: always

    env_file:
    - secrets/oauth.env

    environment:
      HOSTNAME: localhost:8443

    ports:
    - 8443:8443

    secrets:
    - source: token-issuer-keys
      target: /opt/scitokens-server/etc/keys.jwk
    - source: token-issuer-ssl-crt
      target: /opt/tomcat/conf/hostcert.pem
    - source: token-issuer-ssl-key
      target: /opt/tomcat/conf/hostkey.pem
    - source: token-issuer-user-config
      target: /opt/scitokens-server/var/qdl/user-config.txt

    volumes:
    - token-issuer:${TOKEN_ISSUER_VOLUME_PATH}

  htcondor:
    image: htcondor/mini:9.7-el7
    container_name: htcondor.localdomain
    restart: always

    ports:
    - 9618:9618

    secrets:
    - source: htcondor-end-to-end-env
      target: /etc/condor/config.d/90-end-to-end-env
    - source: htcondor-minicondor
      target: /etc/condor/config.d/00-minicondor
    - source: htcondor-mapfile
      target: /etc/condor/condor_mapfile


#---------------------------------------------------------------------------

## Create the networks and volumes below via `make build`.

networks:
  default:
    name: ${DOCKER_NETWORK_NAME}
    external: true

secrets:
  htcondor-end-to-end-env:
    file: config/90-end-to-end-env
  htcondor-mapfile:
    file: config/condor_mapfile
  sciauth-service-config:
    file: secrets/jupyterhub_svc_config.yaml
  token-issuer-keys:
    file: secrets/token-issuer.jwks
  token-issuer-ssl-crt:
    file: secrets/tls.crt
  token-issuer-ssl-key:
    file: secrets/tls.key
  token-issuer-user-config:
    file: secrets/user-config.json

  htcondor-minicondor:
    file: overrides/htcondor/00-minicondor

volumes:
  hub:
    name: ${HUB_VOLUME_NAME}
    external: true
  db:
    name: ${DB_VOLUME_NAME}
    external: true
  token-issuer:
    name: ${TOKEN_ISSUER_VOLUME_NAME}
    external: true
